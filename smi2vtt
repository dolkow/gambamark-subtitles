#!/usr/bin/env python3

import re
import sys

def fail(msg):
    print(msg, file=sys.stderr)
    sys.exit(1)

def blocks(file):
    eof = False
    buffered = []
    while not eof:
        try:
            line = next(file)
        except StopIteration:
            line = ''
            eof = True
        if line.strip():
            buffered.append(line)
        elif buffered:
            yield tuple(buffered)
            buffered.clear()

def timefmt(ms):
    h = ms // 3600000
    m = (ms // 60000) % 60
    s = (ms // 1000) % 60
    ms = ms % 1000
    return '%02d:%02d:%02d.%03d' % (h, m, s, ms)

BR_RE = re.compile('<[Bb][Rr]>')


print('WEBVTT')
print('')

in_body = False
buffered = []
for line in sys.stdin:
    lowline = line.lower()
    if lowline == '</body>\n':
        in_body = False
    if not in_body:
        if lowline == '<body>\n':
            in_body = True
        continue
    if lowline.startswith('<sync start='):
        end_ix = lowline.find('>')
        ts = int(lowline[12:end_ix])
        if lowline.endswith('&nbsp;\n'):
            end_time = ts
            print(timefmt(start_time), '-->', timefmt(end_time))
            for buf in buffered:
                print(BR_RE.sub('\n', buf), end='')
            buffered.clear()
            print()
        elif not lowline.endswith('>\n'):
            fail('unexpected end of sync line: %r' % line)
        start_time = ts
        continue
    buffered.append(line)
